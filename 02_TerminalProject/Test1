#include <ncurses.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <stdlib.h>

enum Consts
{
    DEF_STRING_COUNT = 100,
    MAX_STRING_LEN = 100
};

WINDOW *create_window()
{
    int startx = 0;
    int starty = 3;
    return newwin(LINES - 3, COLS, starty, startx);
}

void free_strings(char**, int);

char **read_strings(FILE *file, int *str_count)
{
    char **strings = malloc(DEF_STRING_COUNT * sizeof(char *));

    int current_str_count = DEF_STRING_COUNT;
    int iterator = 0;
    char *str;

    while (!feof(file))
    {
        str = malloc(MAX_STRING_LEN);

        if (!str)
        {
            free_strings(strings, iterator);
            return NULL;
        }

        if (iterator == current_str_count)
        {
            char *tmp = realloc(strings, current_str_count * 2);
            if (!tmp)
            {
                free_strings(strings, iterator);
                return NULL;
            }
            current_str_count *= 2;
        }

        str = fgets(str, MAX_STRING_LEN, file);
        if (!str)
        {
            printw("Error during reading string from file");
        }

        strings[iterator] = str;
        ++iterator;
    }

    *str_count = iterator - 1;
    return strings;
}

void free_strings(char **strings, int len)
{
    for (int i = 0; i < len; ++i)
    {
        free(strings[i]);
    }

    free(strings);
}

int main(int argc, char **argv)
{
    initscr();
    cbreak();
    keypad(stdscr, 1);
    if (argc <= 1)
    {
        printw("There is no file name.\nPress any button to exit.");
        getch();
        endwin();
        return -1;
    }

    FILE* file = fopen(argv[1], "r");

    if (!file)
    {
        printw("Can not open the file %s\nPress any button to exit.", argv[1]);
        getch();
        endwin();
        return -1;
    }

    int str_count = 0;
    char **strings = read_strings(file, &str_count);
    WINDOW *win = create_window();
    refresh();
    printw("%s\n", argv[1]);
    printw("%d\n", str_count);
    for (int i = 0; i < str_count; ++i)
    {
        printw("%s", strings[i]);
        refresh();
    }
    refresh();
    getch();
    /*box(win, 0, 0);
    wrefresh(win);*/
    fclose(file);
    free_strings(strings, str_count);
    //delwin(win);
    endwin();
    return 0;
}
